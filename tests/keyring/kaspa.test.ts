import { UR } from "@ngraveio/bc-ur";
import { GsWalletBTCSDK } from "../../src";
import { fromHex, toHex } from "../../src/utils/format";
import { GsplDataType } from "../../src/registry/CryptoGspl";

describe('kaspa', () => {
  it('kaspa generateSignRequest', () => {
    const ur: UR = GsWalletBTCSDK.generateSignRequest({
      uuid: "cf769950-8d24-11ef-90ac-6dae386eaee6",
      hexData: "08001290010a440a4039333332383265666563653963663665343661316638383132623361656361366365333238373264313932353665326662613633373238313339653730656431100012443230616461623237366666623561303739646639393066663237336262376538623963313363336664623761313432333030306136353235613430393731323431616163180028011a4f088084af5f12480800124432306164616232373666666235613037396466393930666632373362623765386239633133633366646237613134323330303061363532356134303937313234316161631a5008f0f7858f01124808001244323061646162323736666662356130373964663939306666323733626237653862396331336333666462376131343233303030613635323561343039373132343161616320002a28303030303030303030303030303030303030303030303030303030303030303030303030303030303000",
      dataType: GsplDataType.transaction,
      path: "m/44'/111111'/0'/0/0",
      inputs: [
        {
          path: "m/44'/111111'/0'/0/0",
          amount: 500000000,
          signature: null,
          signhashType: 1,
        },
      ],
      change: {
        path: "m/44'/111111'/0'/0/0",
        amount: 299990000,
      },
      xfp: "27c3831f",
      origin: undefined,
    });

    expect(toHex(ur.cbor)).toBe("a301d82550cf7699508d2411ef90ac6dae386eaee602d917dfa40159016608001290010a440a4039333332383265666563653963663665343661316638383132623361656361366365333238373264313932353665326662613633373238313339653730656431100012443230616461623237366666623561303739646639393066663237336262376538623963313363336664623761313432333030306136353235613430393731323431616163180028011a4f088084af5f12480800124432306164616232373666666235613037396466393930666632373362623765386239633133633366646237613134323330303061363532356134303937313234316161631a5008f0f7858f01124808001244323061646162323736666662356130373964663939306666323733626237653862396331336333666462376131343233303030613635323561343039373132343161616320002a2830303030303030303030303030303030303030303030303030303030303030303030303030303030300002010381d917dea3018a182cf51a0001b207f500f500f400f4021a1dcd6500040104d917dea2018a182cf51a0001b207f500f500f400f4021a11e17bf003d99d70a2018a182cf51a0001b207f500f500f400f4021a1f83c327");
  });

  it('kaspa parseSignature', () => {
    const cbor = "a301d82550cf7699508d2411ef90ac6dae386eaee602d917dfa40159016608001290010a440a4039333332383265666563653963663665343661316638383132623361656361366365333238373264313932353665326662613633373238313339653730656431100012443230616461623237366666623561303739646639393066663237336262376538623963313363336664623761313432333030306136353235613430393731323431616163180028011a4f088084af5f12480800124432306164616232373666666235613037396466393930666632373362623765386239633133633366646237613134323330303061363532356134303937313234316161631a5008f0f7858f01124808001244323061646162323736666662356130373964663939306666323733626237653862396331336333666462376131343233303030613635323561343039373132343161616320002a2830303030303030303030303030303030303030303030303030303030303030303030303030303030300002010381d917dea4018a182cf500f41a0001b207f500f400f5021a1dcd65000358424107392719cffedafcb41ab9ff72fe6e0f854f250f52e726b56cd5caeebac3521b51788a67bf7fd255b5fd00bb2e98cdcc91d890e0b9aa6629c47044f1b3ffee9901040104d917dea2018a182cf500f41a0001b207f500f400f5021a11e17bf00368475357414c4c4554";
    const ur: UR = new UR(fromHex(cbor), "btc-signature");
    const kaspaSigned = GsWalletBTCSDK.parseSignature(ur);

    expect(kaspaSigned).toBe({});
  });
});